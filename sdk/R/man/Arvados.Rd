% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Arvados.R
\name{Arvados}
\alias{Arvados}
\title{Arvados}
\description{
Arvados class gives users ability to access Arvados REST API. It also allowes user to manipulate collections (and projects?)
}
\section{Usage}{

\preformatted{arv = Arvados$new(authToken = "your Arvados token", hostName = "example.arvadosapi.com", numRetries = 0)}
}

\section{Arguments}{

\describe{
	\item{authToken}{Authentification token. If not specified ARVADOS_API_TOKEN environment variable will be used.}
	\item{hostName}{Host name. If not specified ARVADOS_API_HOST environment variable will be used.}
	\item{numRetries}{Number which specifies how many times to retry failed service requests_}
}
}

\section{Methods}{

\describe{
	\item{}{\code{\link{api_client_authorizations_create}}}
	\item{}{\code{\link{api_client_authorizations_create_system_auth}}}
	\item{}{\code{\link{api_client_authorizations_current}}}
	\item{}{\code{\link{api_client_authorizations_delete}}}
	\item{}{\code{\link{api_client_authorizations_get}}}
	\item{}{\code{\link{api_client_authorizations_list}}}
	\item{}{\code{\link{api_client_authorizations_update}}}
	\item{}{\code{\link{api_clients_create}}}
	\item{}{\code{\link{api_clients_delete}}}
	\item{}{\code{\link{api_clients_get}}}
	\item{}{\code{\link{api_clients_list}}}
	\item{}{\code{\link{api_clients_update}}}
	\item{}{\code{\link{authorized_keys_create}}}
	\item{}{\code{\link{authorized_keys_delete}}}
	\item{}{\code{\link{authorized_keys_get}}}
	\item{}{\code{\link{authorized_keys_list}}}
	\item{}{\code{\link{authorized_keys_update}}}
	\item{}{\code{\link{collections_create}}}
	\item{}{\code{\link{collections_delete}}}
	\item{}{\code{\link{collections_get}}}
	\item{}{\code{\link{collections_list}}}
	\item{}{\code{\link{collections_provenance}}}
	\item{}{\code{\link{collections_trash}}}
	\item{}{\code{\link{collections_untrash}}}
	\item{}{\code{\link{collections_update}}}
	\item{}{\code{\link{collections_used_by}}}
	\item{}{\code{\link{configs.get}}}
	\item{}{\code{\link{projects_properties_set}}}
	\item{}{\code{\link{projects_properties_append}}}
	\item{}{\code{\link{projects_properties_get}}}
	\item{}{\code{\link{projects_properties_delete}}}
	\item{}{\code{\link{container_requests_create}}}
	\item{}{\code{\link{container_requests_delete}}}
	\item{}{\code{\link{container_requests_get}}}
	\item{}{\code{\link{container_requests_list}}}
	\item{}{\code{\link{container_requests_update}}}
	\item{}{\code{\link{containers_auth}}}
	\item{}{\code{\link{containers_create}}}
	\item{}{\code{\link{containers_current}}}
	\item{}{\code{\link{containers_delete}}}
	\item{}{\code{\link{containers_get}}}
	\item{}{\code{\link{containers_list}}}
	\item{}{\code{\link{containers_lock}}}
	\item{}{\code{\link{containers_secret_mounts}}}
	\item{}{\code{\link{containers_unlock}}}
	\item{}{\code{\link{containers_update}}}
	\item{}{\code{\link{groups_contents}}}
	\item{}{\code{\link{groups_create}}}
	\item{}{\code{\link{groups_delete}}}
	\item{}{\code{\link{groups_get}}}
	\item{}{\code{\link{groups_list}}}
	\item{}{\code{\link{groups_shared}}}
	\item{}{\code{\link{groups_trash}}}
	\item{}{\code{\link{groups_untrash}}}
	\item{}{\code{\link{groups_update}}}
	\item{}{\code{\link{keep_services_accessible}}}
	\item{}{\code{\link{keep_services_create}}}
	\item{}{\code{\link{keep_services_delete}}}
	\item{}{\code{\link{keep_services_get}}}
	\item{}{\code{\link{keep_services_list}}}
	\item{}{\code{\link{keep_services_update}}}
	\item{}{\code{\link{projects_permission_set}}}
	\item{}{\code{\link{projects_permission_remove}}}
	\item{}{\code{\link{projects_permission_update}}}
	\item{}{\code{\link{projects_permission_check}}}
	\item{}{\code{\link{links_create}}}
	\item{}{\code{\link{links_delete}}}
	\item{}{\code{\link{links_get}}}
	\item{}{\code{\link{links_get_permissions}}}
	\item{}{\code{\link{links_list}}}
	\item{}{\code{\link{links_update}}}
	\item{}{\code{\link{logs_create}}}
	\item{}{\code{\link{logs_delete}}}
	\item{}{\code{\link{logs_get}}}
	\item{}{\code{\link{logs_list}}}
	\item{}{\code{\link{logs_update}}}
	\item{}{\code{\link{projects_create}}}
	\item{}{\code{\link{projects_delete}}}
	\item{}{\code{\link{projects_exist}}}
	\item{}{\code{\link{projects_get}}}
	\item{}{\code{\link{projects_list}}}
	\item{}{\code{\link{projects_update}}}
	\item{}{\code{\link{repositories_create}}}
	\item{}{\code{\link{repositories_delete}}}
	\item{}{\code{\link{repositories_get}}}
	\item{}{\code{\link{repositories_get_all_permissions}}}
	\item{}{\code{\link{repositories_list}}}
	\item{}{\code{\link{repositories_update}}}
	\item{}{\code{\link{user_agreements_create}}}
	\item{}{\code{\link{user_agreements_delete}}}
	\item{}{\code{\link{user_agreements_get}}}
	\item{}{\code{\link{user_agreements_list}}}
	\item{}{\code{\link{user_agreements_new}}}
	\item{}{\code{\link{user_agreements_sign}}}
	\item{}{\code{\link{user_agreements_signatures}}}
	\item{}{\code{\link{user_agreements_update}}}
	\item{}{\code{\link{users_activate}}}
	\item{}{\code{\link{users_create}}}
	\item{}{\code{\link{users_current}}}
	\item{}{\code{\link{users_delete}}}
	\item{}{\code{\link{users_get}}}
	\item{}{\code{\link{users_list}}}
	\item{}{\code{\link{users_merge}}}
	\item{}{\code{\link{users_setup}}}
	\item{}{\code{\link{users_system}}}
	\item{}{\code{\link{users_unsetup}}}
	\item{}{\code{\link{users_update}}}
	\item{}{\code{\link{virtual_machines_create}}}
	\item{}{\code{\link{virtual_machines_delete}}}
	\item{}{\code{\link{virtual_machines_get}}}
	\item{}{\code{\link{virtual_machines_get_all_logins}}}
	\item{}{\code{\link{virtual_machines_list}}}
	\item{}{\code{\link{virtual_machines_logins}}}
	\item{}{\code{\link{virtual_machines_update}}}
	\item{}{\code{\link{workflows_create}}}
	\item{}{\code{\link{workflows_delete}}}
	\item{}{\code{\link{workflows_get}}}
	\item{}{\code{\link{workflows_list}}}
	\item{}{\code{\link{workflows_update}}}
}
}

\examples{
\dontrun{
# initialize API and a collection object:
arv <- Arvados$new("your Arvados token", "example.arvadosapi.com")
collection <- arv$collections_get("uuid")

# Filtr collection by metadata and create list of them
collectionList <- arv$collections_list(list(list("name", "like", "Test\%")))
# add offset of 0 and default limit of 100
collectionList <- arv$collections_list(list(list("name", "like", "Test\%")), limit = 10, offset = 2)
# list all collections even if the number of items is greater than maximum API limit:
collectionList <- listAll(arv$collections_list, list(list("name", "like", "Test\%")))

# delete a collection:
deletedCollection <- arv$collections_delete("uuid")

# update a collectionâ€™s metadata:
updatedCollection <- arv$collections_update(list(name = "New name", description = "New description"),
                                            "uuid")

# create a new collection:
createdCollection <- arv$collections_create(list(name = "Example",
                                                 description = "This is a test collection"))

# get a project:
project <- arv$projects_get("ardev-j7d0g-u8f5hi7a9klsiw7")

# list projects:
# list subprojects of a project
projects <- arv$projects_list(list(list("owner_uuid", "=", "aaaaa-j7d0g-ccccccccccccccc")))
# list projects which have names beginning with Example
examples <- arv$projects_list(list(list("name","like","Example\%")))
# list all projects even if the number of items is greater than maximum API limit:
projects <- listAll(arv$projects_list, list(list("name","like","Example\%")))

# delete a project:
deletedProject <- arv$projects_delete(newProject[["uuid"]])

# create project:
newProject <- arv$projects_create(list(name = "project_name", description = "project description"))

# update project:
updatedProject <- arv$projects_update(list(name = "new_name", description = "new description"), newProject$uuid)

}
}
