{% comment %}
Copyright (C) The Arvados Authors. All rights reserved.

SPDX-License-Identifier: CC-BY-SA-3.0
{% endcomment %}

Copy your certificates to the directory specified with the variable @CUSTOM_CERTS_DIR@ in the remote directory where you copied the @provision.sh@ script. The provision script will find the certificates there.

The script expects cert/key files with these basenames (matching the role except for <i>keepweb</i>, which is split in both <i>download / collections</i>):

# @controller@
# @websocket@        # note: corresponds to default domain @ws.${CLUSTER}.${DOMAIN}@
# @keepproxy@        # note: corresponds to default domain @keep.${CLUSTER}.${DOMAIN}@
# @download@         # Part of keepweb
# @collections@      # Part of keepweb -- important note, this should be a wildcard for @*.collections.${CLUSTER}.${DOMAIN}@
# @workbench@
# @workbench2@
# @webshell@

For example, for the 'keepproxy' service the script will expect to find this certificate:

<notextile>
<pre><code>${CUSTOM_CERTS_DIR}/keepproxy.crt
${CUSTOM_CERTS_DIR}/keepproxy.key
</code></pre>
</notextile>

Make sure that all the FQDNs that you will use for the public-facing applications (API/controller, Workbench, Keepproxy/Keepweb) are reachable.

It may be easier to create a single certificate wh